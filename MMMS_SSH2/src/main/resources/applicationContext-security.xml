<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security" xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
						http://www.springframework.org/schema/security 
						http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<global-method-security pre-post-annotations="enabled" />
	<http pattern="/sp/loginView.do" security="none" />
	<http pattern="/sp/execError.do" security="none" />
	<!-- <http pattern="/login.jsp" security="none" /> -->


	<!-- <http use-expressions="true" auto-config="true"> -->
	<!-- <http use-expressions="true" entry-point-ref="authenticationProcessingFilterEntryPoint"> -->
	<http use-expressions="true">
		<anonymous enabled="false" /> 
		<!-- 登录界面管理 -->
		<form-login login-page="/sp/loginView.do" default-target-url="/sp/indexView.do" authentication-failure-url="/sp/loginView.do" />

		<logout logout-success-url="/sp/loginView.do" invalidate-session="true" /> 

		<!-- remember-me 设置 -->
		<!-- <remember-me /> -->

		<!-- session管理 -->
		<!-- <session-management invalid-session-url="/login.jsp"> <concurrency-control 
			max-sessions="1" error-if-maximum-exceeded="false" /> </session-management> -->


		<!-- login 过滤器 -->
		<custom-filter ref="myLoginFilter" before="FORM_LOGIN_FILTER" />
		<!-- FILTER_SECURITY_INTERCEPTOR Spring Security默认的Filter -->
		<custom-filter ref="myFilter" before="FILTER_SECURITY_INTERCEPTOR" />
	</http>
	
	     <!-- 登录验证器 -->
<!-- 	<beans:bean id="myLoginFilter" class="com.balintimes.MMMS.Security.MyUsernamePasswordAuthenticationFilter">   
		<beans:property name="filterProcessesUrl" value="/j_spring_security_check"></beans:property>   
		<beans:property name="authenticationSuccessHandler" ref="loginLogAuthenticationSuccessHandler"></beans:property>   
		<beans:property name="authenticationFailureHandler" ref="simpleUrlAuthenticationFailureHandler"></beans:property> 
		<beans:property name="authenticationManager" ref="authenticationManager"></beans:property>   
	</beans:bean> 
	<beans:bean id="loginLogAuthenticationSuccessHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
		<beans:property name="defaultTargetUrl" value="/sp/indexView.do"></beans:property>
	</beans:bean>
	<beans:bean id="simpleUrlAuthenticationFailureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">   
		<beans:property name="defaultFailureUrl" value="/sp/loginView.do"></beans:property>
	</beans:bean>  -->


	<!--<beans:bean id="authenticationProcessingFilterEntryPoint" class="org.springframework.security.web.authentication.AuthenticationProcessingFilterEntryPoint">
		  <beans:property name="loginFormUrl" value="/sp/loginView.do" />  
	</beans:bean>-->

	<beans:bean id="authenticationProcessingFilterEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<beans:property name="loginFormUrl" value="/sp/loginView.do" />
	</beans:bean>
	<beans:bean id="myLoginFilter" class="com.balintimes.MMMS.Security.MyUsernamePasswordAuthenticationFilter">
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<!-- <beans:property name="failureUrl" value="/loginfailure.jsp" /> -->
<!-- 		<property name="successUrl" value="/sp/indexView.do" />
		<property name="failureUrl" value="/sp/loginView.do" />
		<property name="authenticationManager" ref="authenticationManager"></property> -->
	</beans:bean>
<!-- 
	<beans:bean id="myLoginFilter" class="com.balintimes.MMMS.Security.MyUsernamePasswordAuthenticationFilter">
		<beans:property name="filterProcessesUrl" value="/sp/loginView.do" />
		<beans:property name="authenticationSuccessHandler" ref="loginLogAuthenticationSuccessHandler" />
		<beans:property name="authenticationFailureHandler" ref="simpleUrlAuthenticationFailureHandler" />
		<beans:property name="authenticationManager" ref="authenticationManager" />
	</beans:bean>
	<beans:bean id="loginLogAuthenticationSuccessHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
		<beans:property name="defaultTargetUrl" value="/sp/indexView.do" />
	</beans:bean>
	<beans:bean id="simpleUrlAuthenticationFailureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<beans:property name="defaultFailureUrl" value="/sp/loginView.do" />
	</beans:bean> 
	 -->


	<!-- 自定义过滤器 -->
	<beans:bean id="myFilter" class="com.balintimes.MMMS.Security.MySecurityFilterInterceptor">
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="accessDecisionManager" ref="myAccessDecisionManager" />
		<beans:property name="securityMetadataSource" ref="mySecurityMetadataSource" />
	</beans:bean>

	<!-- 配置认证管理器 -->
	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="daoAuthenticationProvider" />
	</authentication-manager>

	<beans:bean id="myUserDetailService" class="com.balintimes.MMMS.Security.MyUserDetailService" />  

	<!-- 访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源 -->
	<beans:bean id="myAccessDecisionManager" class="com.balintimes.MMMS.Security.MyAccessDecisionManager" /> 

	<!-- 资源权限关系，将所有的资源和权限对应关系建立起来，即定义某一资源可以被哪些角色去访问 -->
	<beans:bean id="mySecurityMetadataSource" class="com.balintimes.MMMS.Security.MySecurityMetadataSource">
		<!-- <beans:constructor-arg name="resourcesDao" ref="resourcesDao"></beans:constructor-arg> 
		<beans:constructor-arg name="iresourceSvc" ref="resourcesService"></beans:constructor-arg>-->
	</beans:bean>

	<beans:bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<beans:property name="userDetailsService" ref="myUserDetailService" />
		<beans:property name="passwordEncoder" ref="passwordEncoder" />
		<beans:property name="saltSource" ref="saltSource" />
		<beans:property name="hideUserNotFoundExceptions" value="false" />
	</beans:bean>

	<!-- md5密码验证 -->
	<beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />
	<!-- 加盐值 -->
	<beans:bean id="saltSource" class="org.springframework.security.authentication.dao.ReflectionSaltSource">
		<beans:property name="userPropertyToUse" value="username" />
	</beans:bean>
</beans:beans> 